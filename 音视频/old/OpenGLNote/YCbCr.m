
"YCbCr"或者"Y'CbCr"有的时候会被写作:YCBCR或者"Y'CBCR", 是色彩空间的一种, 通常会用于影片中的影像连续处理, 或是数字摄影系统中. "Y'"为颜色的亮度(luma)成分, 而CB和CR则为蓝色和红色的浓度偏移量成分.
"Y'"和"Y"是不同的,而Y就是所谓的流明(luminance)

"中文名": YCbCr                 "功    能": 视频输入的预处理
"写    作": YCBCR或是"Y'CBCR"   "存放的码流为":  Y0 U0 V0 Y1 U1 V1 Y2

'它其实是YUV经过缩放和偏移的翻版'

"其中 Y与YUV中的Y含义一致, Cb Cr同样都指色彩"
'在YUV家族中, YCBCr是计算机系统中应用最多的成员----JPEG----MPEG'

// 一般人们所讲的YUV大多数指的就是YCbCr.
// YCbCr 有许多取样格式, 如 4:4:4.  4:2:2, 4:1:1, 和4:2:0



/*
 R = 1.164*(Y-16)+1.596*(Cr-128)
 G = 1.164*(Y-16)-0.392*(Cb-128)-0.813*(Cr-128)
 B = 1.164*(Y-16)+2.017*(Cb-128)
 */
// BT.601, which is the standard for SDTV.
static const GLfloat kColorConversion601[] = {
    1.164,  1.164,  1.164,
    0.0,    -0.392, 2.017,
    1.596,  -0.813, 0.0,
    
};


Y = 0.257*R+0.504*G+0.098*B+16
Cb = -0.148*R-0.291*G+0.439*B+128
Cr = 0.439*R-0.368*G-0.071*B+128




采样格式编辑
主要的采样格式有YCbCr 4:2:0、YCbCr 4:2:2、YCbCr 4:1:1和 YCbCr 4:4:4。其中YCbCr 4:1:1 比较常用，其含义为：每个点保存一个 8bit 的亮度值（也就是Y值），每 2x2 个点保存一个 Cr 和Cb 值，图像在肉眼中的感觉不会起太大的变化。所以，原来用 RGB(R,G,B 都是 8bit unsigned) 模型，每个点需要 8x3=24 bits（如下图第一个图）. 而仅需要 8+（8/4）+（8/4）=12bits，平均每个点占12bits。这样就把图像的数据压缩了一半。
上边仅给出了理论上的示例，在实际数据存储中是有可能是不同的，下面给出几种具体的存储形式：
YUV 4:4:4
YUV三个信道的抽样率相同，因此在生成的图像里，每个象素的三个分量信息完整（每个分量通常8比特），经过8比特量化之后，未经压缩的每个像素占用3个字节。
下面的四个像素为： [Y0 U0 V0] [Y1 U1 V1] [Y2 U2 V2] [Y3 U3 V3]
存放的码流为： Y0 U0 V0 Y1 U1 V1 Y2 U2 V2 Y3 U3 V3
YUV 4:2:2
每个色差信道的抽样率是亮度信道的一半，所以水平方向的色度抽样率只是4:4:4的一半。对非压缩的8比特量化的图像来说，每个由两个水平方向相邻的像素组成的宏像素需要占用4字节内存。
下面的四个像素为： [Y0 U0 V0] [Y1 U1 V1] [Y2 U2 V2] [Y3 U3 V3]
存放的码流为： Y0 U0 Y1 V1 Y2 U2 Y3 V3
映射出像素点为：[Y0 U0 V1] [Y1 U0 V1] [Y2 U2 V3] [Y3 U2 V3]
YUV 4:1:1
4:1:1的色度抽样，是在水平方向上对色度进行4:1抽样。对于低端用户和消费类产品这仍然是可以接受的。对非压缩的8比特量化的视频来说，每个由4个水平方向相邻的像素组成的宏像素需要占用6字节内存
下面的四个像素为： [Y0 U0 V0] [Y1 U1 V1] [Y2 U2 V2] [Y3 U3 V3]
存放的码流为： Y0 U0 Y1 Y2 V2 Y3
映射出像素点为：[Y0 U0 V2] [Y1 U0 V2] [Y2 U0 V2] [Y3 U0 V2]
YUV4:2:0
4:2:0并不意味着只有Y,Cb而没有Cr分量。它指得是对每行扫描线来说，只有一种色度分量以2:1的抽样率存储。相邻的扫描行存储不同的色度分量，也就是说，如果一行是4:2:0的话，下一行就是4:0:2，再下一行是4:2:0...以此类推。对每个色度分量来说，水平方向和竖直方向的抽样率都是2:1，所以可以说色度的抽样率是4:1。对非压缩的8比特量化的视频来说，每个由2x2个2行2列相邻的像素组成的宏像素需要占用6字节内存。
下面八个像素为：[Y0 U0 V0] [Y1 U1 V1] [Y2 U2 V2] [Y3 U3 V3]
[Y5 U5 V5] [Y6 U6 V6] [Y7U7 V7] [Y8 U8 V8]
存放的码流为：Y0 U0 Y1 Y2 U2 Y3
Y5 V5 Y6 Y7 V7 Y8
映射出的像素点为：[Y0 U0 V5] [Y1 U0 V5] [Y2 U2 V7] [Y3 U2 V7]
[Y5 U0 V5] [Y6 U0 V5] [Y7U2 V7] [Y8 U2 V7]
YCbCr与RGB的相互转换
Y = 0.257*R+0.504*G+0.098*B+16
　　Cb = -0.148*R-0.291*G+0.439*B+128
　　Cr = 0.439*R-0.368*G-0.071*B+128
R = 1.164*(Y-16)+1.596*(Cr-128)
G = 1.164*(Y-16)-0.392*(Cb-128)-0.813*(Cr-128)
B = 1.164*(Y-16)+2.017*(Cb-128)
模拟分量部分
YCbCr 有时会称为YCC. Y'CbCr 在模拟分量视频（analog component video）中也常被称为YPbPr。
Y'CbCr讯号（prior to scaling and offsets to place the signals into digital form）被称为YPbPr ，而且产生时必须合乎gamma-adjusted RGB source有二个不同的常数Kb和Kr如下：YPbPr (analog version of Y'CbCr) from R'G'B' YPbPr (analog version of Y'CbCr) from R'G'B' ==================================================== ================================================== ==
Y' = Kr * R'+ （1 - Kr - Kb) * G' + Kb * B'
Pb = 0.5 * (B' - Y') / （1 - Kb) Pb = 0.5 * (B' - Y') / （1 - Kb)
Pr = 0.5 * (R' - Y') / （1 - Kr) Pr = 0.5 * (R' - Y') / （1 - Kr)
.................................................... .................................................. ..
R',G',B' in [0; 1] R',G',B' in [0; 1]
Y' in [0; 1] Y' in [0; 1]
Pb in [-0.5; 0.5] Pb in [-0.5; 0.5]
Pr in [-0.5; 0.5] Pr in [-0.5; 0.5]
